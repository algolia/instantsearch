{"version":3,"sources":["docgen/src/examples/media/App.js"],"names":["App","props","searchState","createURL","bind","onSearchStateChange","Header","SearchBox","currentRefinement","refine","e","target","value","Facets","Panel","title","children","id","Star","active","Stars","rating","stars","i","push","map","idx","Genre","name","Genres","genres","genre","Hit","hit","image","year","backgroundImage","Results","RefinementListLinks","items","hitComponents","item","isRefined","label","preventDefault","count"],"mappings":"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","file":"App.js","sourceRoot":"/Users/lucasbonomi/Sites/instantsearch.js","sourcesContent":["\n/* eslint react/prop-types: 0 */\n\nimport React from 'react';\nimport 'react-instantsearch-theme-algolia/style.scss';\n\nimport {\n  InstantSearch,\n  Hits,\n  Stats,\n  Pagination,\n  StarRating,\n  Highlight,\n  Configure,\n} from 'react-instantsearch/dom';\n\nimport {connectSearchBox, connectRefinementList} from 'react-instantsearch/connectors';\nimport {withUrlSync} from '../urlSync';\n\nconst App = props =>\n  <InstantSearch\n    appId=\"latency\"\n    apiKey=\"6be0576ff61c053d5f9a3225e2a90f76\"\n    indexName=\"movies\"\n    searchState={props.searchState}\n    createURL={props.createURL.bind(this)}\n    onSearchStateChange={props.onSearchStateChange.bind(this)}\n  >\n    <Configure hitsPerPage={10} />\n    <Header/>\n    <section>\n      <Facets/>\n      <Results/>\n    </section>\n  </InstantSearch>;\n\nconst Header = () =>\n  <header className=\"row\">\n    <a href=\"https://community.algolia.com/instantsearch.js/\" className=\"is-logo\">\n      <img\n        src=\"https://res.cloudinary.com/hilnmyskv/image/upload/w_100,h_100,dpr_2.0//v1461180087/logo-instantsearchjs-avatar.png\"\n        width=\"40\"/></a>\n    <a href=\"./\" className=\"logo\">You<i className=\"fa fa-youtube-play\"></i></a>\n    <SearchBox />\n  </header>;\n\nconst SearchBox = connectSearchBox(\n  ({currentRefinement, refine}) =>\n    <div className=\"searchbox-container\">\n      <div className=\"input-group\">\n        <input type=\"text\"\n               value={currentRefinement}\n               onChange={e => refine(e.target.value)}\n               autoComplete=\"off\"\n               className=\"form-control\"\n        />\n        <span className=\"input-group-btn\">\n          <button className=\"btn btn-default\"><i className=\"fa fa-search\"></i></button>\n        </span>\n      </div>\n    </div>\n);\n\nconst Facets = () => <aside>\n  <ul className=\"nav nav-list panel\">\n    <li><a href=\"./\"><i className=\"fa fa-home\"></i> Home</a></li>\n    <li className=\"separator\"></li>\n  </ul>\n  <Panel title=\"Genres\" id=\"genres\">\n    <RefinementListLinks\n      attributeName=\"genre\"\n    />\n  </Panel>\n  <Panel title=\"Rating\" id=\"ratings\">\n    <StarRating attributeName=\"rating\" max={5}/>\n  </Panel>\n  <div className=\"thank-you\">Data courtesy of <a href=\"https://www.imdb.com/\">imdb.com</a></div>\n</aside>;\n\nconst Panel = ({title, children, id}) =>\n  <div id={id}>\n    <h5><i className=\"fa fa-chevron-right\"></i> {title}</h5>\n    {children}\n  </div>;\n\nconst Star = ({active}) => <span className={`star${active ? '' : '__empty'}`}/>;\nconst Stars = ({rating}) => {\n  const stars = [];\n  for (let i = 1; i <= 5; ++i) {\n    stars.push(i <= rating);\n  }\n  return <span className=\"stars\">{stars.map((active, idx) => <Star key={idx} active={active}/>)}</span>;\n};\nconst Genre = ({name}) => <span className=\"badge\">{name}</span>;\nconst Genres = ({genres}) => <p className=\"genre\">{genres.map((genre, idx) => <Genre name={genre} key={idx}/>)}</p>;\n\nconst Hit = hit => {\n  const {\n    image,\n    rating,\n    year,\n    genre,\n  } = hit.hit;\n  return (\n    <div className=\"hit media\">\n      <div className=\"media-left\">\n        <div className=\"media-object\" style={{backgroundImage: `url(${image})`}}></div>\n      </div>\n      <div className=\"media-body\">\n        <h4 className=\"media-heading\">\n          <Highlight attributeName=\"title\" hit={hit.hit} />\n          <Stars rating={rating}/>\n        </h4>\n        <p className=\"year\">{year}</p>\n        <Genres genres={genre}/>\n      </div>\n    </div>\n  );\n};\n\nconst Results = connectSearchBox(() =>\n    <article>\n      <div id=\"stats\" className=\"text-right text-muted\"><Stats/></div>\n      <hr />\n      <div id=\"hits\"><Hits hitComponent={Hit} /></div>\n      <div id=\"pagination\" className=\"text-center\"><Pagination /></div>\n    </article>\n  );\n\nconst RefinementListLinks = connectRefinementList(({items, refine, createURL}) => {\n  const hitComponents = items.map(item =>\n    <div className={item.isRefined ? ' active' : ''} key={item.label}>\n      <a className=\"item\" href={createURL(item.value)} onClick={e => {\n        e.preventDefault();\n        refine(item.value);\n      }}>\n        <span> {item.label}</span>\n        <span className=\"badge pull-right\">{item.count}</span>\n      </a>\n    </div>\n  );\n\n  return (\n    <div className=\"nav nav-list\">\n      {hitComponents}\n    </div>\n  );\n});\n\nexport default withUrlSync(App);\n"]}