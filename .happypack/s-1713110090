'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = sidebar;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function sidebar(options) {
  var headersContainer = options.headersContainer,
      sidebarContainer = options.sidebarContainer;


  var list = document.createElement('ul');
  list.classList.add('no-mobile');

  sidebarContainer.appendChild(list);
  if (sidebarContainer.firstChild.classList.contains('sidebar-navScroll')) {
    sidebarFollowScroll(sidebarContainer.firstChild);
  }
  activeLinks(sidebarContainer);
  scrollSpy(sidebarContainer, headersContainer);
}

function sidebarFollowScroll(sidebarContainer) {
  var linksContainer = sidebarContainer.querySelector('ul');

  var _getPositionsKeyEleme = getPositionsKeyElements(sidebarContainer),
      height = _getPositionsKeyEleme.height,
      navHeight = _getPositionsKeyEleme.navHeight,
      footerHeight = _getPositionsKeyEleme.footerHeight,
      menuHeight = _getPositionsKeyEleme.menuHeight,
      sidebarTop = _getPositionsKeyEleme.sidebarTop,
      titleHeight = _getPositionsKeyEleme.titleHeight;

  var positionSidebar = function positionSidebar() {
    var currentScroll = window.pageYOffset;
    if (currentScroll > sidebarTop - navHeight) {
      var fold = height - footerHeight - menuHeight - navHeight;
      if (currentScroll > fold) {
        sidebarContainer.style.top = fold - currentScroll + navHeight + 'px';
      } else {
        sidebarContainer.style.top = null;
      }
      sidebarContainer.classList.add('fixed');
      linksContainer.style.maxHeight = 'calc(100vh - ' + (titleHeight + navHeight) + 'px)';
    } else {
      sidebarContainer.classList.remove('fixed');
      linksContainer.style.maxHeight = '';
    }
  };

  window.addEventListener('load', positionSidebar);
  document.addEventListener('DOMContentLoaded', positionSidebar);
  document.addEventListener('scroll', positionSidebar);
}

function scrollSpy(sidebarContainer, headersContainer) {
  var headers = [].concat(_toConsumableArray(headersContainer.querySelectorAll('h2')));

  var setActiveSidebarLink = function setActiveSidebarLink(header) {
    [].concat(_toConsumableArray(sidebarContainer.querySelectorAll('a'))).forEach(function (item) {
      var currentHref = item.getAttribute('href');
      var anchorToFind = '#' + header.getAttribute('id');
      var isCurrentHeader = currentHref.indexOf(anchorToFind) > 0 && currentHref.indexOf(anchorToFind) === currentHref.length - anchorToFind.length;
      if (isCurrentHeader) {
        item.classList.add('active');
      } else {
        item.classList.remove('active');
      }
    });
  };

  var findActiveSidebarLink = function findActiveSidebarLink() {
    var highestVisibleHeaders = headers.map(function (header) {
      return { element: header, rect: header.getBoundingClientRect() };
    }).filter(function (_ref) {
      var rect = _ref.rect;
      return rect.top < window.innerHeight / 3 && rect.bottom < window.innerHeight;
    }
    // top element relative viewport position should be at least 1/3 viewport
    // and element should be in viewport
    )
    // then we take the closest to this position as reference
    .sort(function (header1, header2) {
      return Math.abs(header1.rect.top) < Math.abs(header2.rect.top) ? -1 : 1;
    });

    if (headers[0] && highestVisibleHeaders.length === 0) {
      setActiveSidebarLink(headers[0]);
      return;
    }

    if (highestVisibleHeaders[0]) {
      setActiveSidebarLink(highestVisibleHeaders[0].element);
    }
  };

  findActiveSidebarLink();
  window.addEventListener('load', findActiveSidebarLink);
  document.addEventListener('DOMContentLoaded', findActiveSidebarLink);
  document.addEventListener('scroll', findActiveSidebarLink);
}

// The Following code is used to set active items
// On the documentation sidebar depending on the
// clicked item
function activeLinks(sidebarContainer) {
  var linksContainer = sidebarContainer.querySelector('ul');

  linksContainer.addEventListener('click', function (e) {
    if (e.target.tagName === 'A') {
      [].concat(_toConsumableArray(linksContainer.querySelectorAll('a'))).forEach(function (item) {
        return item.classList.remove('active');
      });
      e.target.classList.add('active');
    }
  });
}
// The Following function will make the '.sidebar-opener'
// clickable and it will open/close the sidebar on the
// documentations

function toggleDocumentationSidebar() {
  var sidebarNav = document.querySelector('nav.sidebar');
  var trigger = document.querySelector('.sidebar-opener');

  function init() {
    var bodySize = document.body.clientWidth;
    if (bodySize <= 960 && sidebarNav) {
      trigger.addEventListener('click', function () {
        sidebarNav.classList.toggle('Showed');
        trigger.classList.toggle('Showed');
      });
    }
  }
  init();
}
toggleDocumentationSidebar();

window.addEventListener('resize', function () {
  toggleDocumentationSidebar();
});

function getPositionsKeyElements($sidebar) {
  var sidebarBBox = $sidebar.getBoundingClientRect();
  var title = $sidebar.querySelector('.sidebar-header');
  var bodyBBox = document.body.getBoundingClientRect();
  var sidebarTop = sidebarBBox.top - bodyBBox.top;
  var footer = document.querySelector('.ac-footer');
  var navigation = document.querySelector('.cm-navigation');
  var menu = document.querySelector('.sidebar-container');
  var height = document.querySelector('html').getBoundingClientRect().height;
  var navHeight = navigation.offsetHeight;
  var footerHeight = footer.offsetHeight;
  var menuHeight = menu.offsetHeight;
  var titleHeight = title.offsetHeight;

  return { sidebarTop: sidebarTop, height: height, navHeight: navHeight, footerHeight: footerHeight, menuHeight: menuHeight, titleHeight: titleHeight };
}
;

var _temp = function () {
  if (typeof __REACT_HOT_LOADER__ === 'undefined') {
    return;
  }

  __REACT_HOT_LOADER__.register(sidebar, 'sidebar', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');

  __REACT_HOT_LOADER__.register(sidebarFollowScroll, 'sidebarFollowScroll', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');

  __REACT_HOT_LOADER__.register(scrollSpy, 'scrollSpy', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');

  __REACT_HOT_LOADER__.register(activeLinks, 'activeLinks', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');

  __REACT_HOT_LOADER__.register(toggleDocumentationSidebar, 'toggleDocumentationSidebar', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');

  __REACT_HOT_LOADER__.register(getPositionsKeyElements, 'getPositionsKeyElements', '/Users/lucasbonomi/Sites/instantsearch.js/docgen/assets/js/sidebar.js');
}();

;