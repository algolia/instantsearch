'use strict'; // code generated by pbf v3.2.1

var WidgetType = exports.WidgetType = {
    "ais.custom": {
        "value": 0,
        "options": {}
    },
    "ais.instantSearch": {
        "value": 1,
        "options": {}
    },
    "ais.autocomplete": {
        "value": 2,
        "options": {}
    },
    "ais.breadcrumb": {
        "value": 3,
        "options": {}
    },
    "ais.clearRefinements": {
        "value": 4,
        "options": {}
    },
    "ais.configure": {
        "value": 5,
        "options": {}
    },
    "ais.configureRelatedItems": {
        "value": 6,
        "options": {}
    },
    "ais.currentRefinements": {
        "value": 7,
        "options": {}
    },
    "ais.geoSearch": {
        "value": 8,
        "options": {}
    },
    "ais.hierarchicalMenu": {
        "value": 9,
        "options": {}
    },
    "ais.hits": {
        "value": 10,
        "options": {}
    },
    "ais.hitsPerPage": {
        "value": 11,
        "options": {}
    },
    "ais.index": {
        "value": 12,
        "options": {}
    },
    "ais.infiniteHits": {
        "value": 13,
        "options": {}
    },
    "ais.menu": {
        "value": 14,
        "options": {}
    },
    "ais.numericMenu": {
        "value": 15,
        "options": {}
    },
    "ais.pagination": {
        "value": 16,
        "options": {}
    },
    "ais.places": {
        "value": 17,
        "options": {}
    },
    "ais.poweredBy": {
        "value": 18,
        "options": {}
    },
    "ais.queryRules": {
        "value": 19,
        "options": {}
    },
    "ais.queryRuleCustomData": {
        "value": 20,
        "options": {}
    },
    "ais.queryRuleContext": {
        "value": 21,
        "options": {}
    },
    "ais.range": {
        "value": 22,
        "options": {}
    },
    "ais.rangeInput": {
        "value": 23,
        "options": {}
    },
    "ais.rangeSlider": {
        "value": 24,
        "options": {}
    },
    "ais.ratingMenu": {
        "value": 25,
        "options": {}
    },
    "ais.refinementList": {
        "value": 26,
        "options": {}
    },
    "ais.searchBox": {
        "value": 27,
        "options": {}
    },
    "ais.sortBy": {
        "value": 28,
        "options": {}
    },
    "ais.stats": {
        "value": 29,
        "options": {}
    },
    "ais.toggleRefinement": {
        "value": 30,
        "options": {}
    },
    "ais.voiceSearch": {
        "value": 31,
        "options": {}
    }
};

var WidgetParams = exports.WidgetParams = {
    "indexName": {
        "value": 1000,
        "options": {}
    },
    "searchClient": {
        "value": 1001,
        "options": {}
    },
    "numberLocale": {
        "value": 1002,
        "options": {}
    },
    "searchFunction": {
        "value": 1003,
        "options": {}
    },
    "initialUiState": {
        "value": 1004,
        "options": {}
    },
    "onStateChange": {
        "value": 1005,
        "options": {}
    },
    "stalledSearchDelay": {
        "value": 1006,
        "options": {}
    },
    "routing": {
        "value": 1007,
        "options": {}
    },
    "insightsClient": {
        "value": 1008,
        "options": {}
    },
    "container": {
        "value": 1009,
        "options": {}
    },
    "placeholder": {
        "value": 1010,
        "options": {}
    },
    "autofocus": {
        "value": 1011,
        "options": {}
    },
    "searchAsYouType": {
        "value": 1012,
        "options": {}
    },
    "showReset": {
        "value": 1013,
        "options": {}
    },
    "showSubmit": {
        "value": 1014,
        "options": {}
    },
    "showLoadingIndicator": {
        "value": 1015,
        "options": {}
    },
    "queryHook": {
        "value": 1016,
        "options": {}
    },
    "templates": {
        "value": 1017,
        "options": {}
    },
    "cssClasses": {
        "value": 1018,
        "options": {}
    },
    "escapeHTML": {
        "value": 1019,
        "options": {}
    },
    "transformItems": {
        "value": 1020,
        "options": {}
    },
    "attributes": {
        "value": 1021,
        "options": {}
    },
    "showMore": {
        "value": 1022,
        "options": {}
    },
    "attribute": {
        "value": 1023,
        "options": {}
    },
    "escapeFacetValues": {
        "value": 1024,
        "options": {}
    },
    "searchParameters": {
        "value": 1025,
        "options": {}
    },
    "on": {
        "value": 1026,
        "options": {}
    },
    "items": {
        "value": 1027,
        "options": {}
    },
    "padding": {
        "value": 1028,
        "options": {}
    },
    "precision": {
        "value": 1029,
        "options": {}
    },
    "max": {
        "value": 1030,
        "options": {}
    },
    "searchable": {
        "value": 1031,
        "options": {}
    },
    "searchablePlaceholder": {
        "value": 1032,
        "options": {}
    },
    "searchableShowReset": {
        "value": 1033,
        "options": {}
    },
    "attributesToSnippet": {
        "value": 1034,
        "options": {}
    },
    "snippetEllipsisText": {
        "value": 1035,
        "options": {}
    },
    "removeWordsIfNoResults": {
        "value": 1036,
        "options": {}
    },
    "scrollTo": {
        "value": 1037,
        "options": {}
    },
    "showFirst": {
        "value": 1038,
        "options": {}
    },
    "showLast": {
        "value": 1039,
        "options": {}
    },
    "pips": {
        "value": 1040,
        "options": {}
    },
    "tooltips": {
        "value": 1041,
        "options": {}
    }
};

// Widget ========================================

var Widget = exports.Widget = {};

Widget.read = function (pbf, end) {
    return pbf.readFields(Widget._readField, {type: 0, params: [], useConnector: false}, end);
};
Widget._readField = function (tag, obj, pbf) {
    if (tag === 600) obj.type = pbf.readVarint();
    else if (tag === 601) pbf.readPackedVarint(obj.params);
    else if (tag === 602) obj.useConnector = pbf.readBoolean();
};
Widget.write = function (obj, pbf) {
    if (obj.type) pbf.writeVarintField(600, obj.type);
    if (obj.params) pbf.writePackedVarint(601, obj.params);
    if (obj.useConnector) pbf.writeBooleanField(602, obj.useConnector);
};

// Schema ========================================

var Schema = exports.Schema = {};

Schema.read = function (pbf, end) {
    return pbf.readFields(Schema._readField, {widgets: [], oversize: 0}, end);
};
Schema._readField = function (tag, obj, pbf) {
    if (tag === 501) obj.widgets.push(Widget.read(pbf, pbf.readVarint() + pbf.pos));
    else if (tag === 502) obj.oversize = pbf.readVarint(true);
};
Schema.write = function (obj, pbf) {
    if (obj.widgets) for (var i = 0; i < obj.widgets.length; i++) pbf.writeMessage(501, Widget.write, obj.widgets[i]);
    if (obj.oversize) pbf.writeVarintField(502, obj.oversize);
};
