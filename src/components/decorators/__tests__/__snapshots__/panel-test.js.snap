// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`headerFooter autoHideContainer hides the component if autoHideContainer is set to true 1`] = `
<div
  className="ais-Panel"
  style={
    Object {
      "display": "",
    }
  }
>
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      autoHideContainer={true}
      collapsible={false}
      cssClasses={Object {}}
    />
  </div>
</div>
`;

exports[`headerFooter collapsible when collapsed 1`] = `
<div
  className="ais-Panel ais-Panel-root--collapsible"
>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Header",
        "onClick": [Function],
      }
    }
    templateKey="panelHeader"
    templates={
      Object {
        "panelFooter": "yo footer",
        "panelHeader": "yo header",
      }
    }
    transformData={null}
  />
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      collapsible={
        Object {
          "collapsed": true,
        }
      }
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "panelFooter": "yo footer",
            "panelHeader": "yo header",
          },
        }
      }
    />
  </div>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Footer",
        "onClick": null,
      }
    }
    templateKey="panelFooter"
    templates={
      Object {
        "panelFooter": "yo footer",
        "panelHeader": "yo header",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter collapsible when true 1`] = `
<div
  className="ais-Panel ais-Panel-root--collapsible"
>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Header",
        "onClick": [Function],
      }
    }
    templateKey="panelHeader"
    templates={
      Object {
        "panelFooter": "yo footer",
        "panelHeader": "yo header",
      }
    }
    transformData={null}
  />
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      collapsible={true}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "panelFooter": "yo footer",
            "panelHeader": "yo header",
          },
        }
      }
    />
  </div>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Footer",
        "onClick": null,
      }
    }
    templateKey="panelFooter"
    templates={
      Object {
        "panelFooter": "yo footer",
        "panelHeader": "yo header",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter should add a footer if such a template is passed 1`] = `
<div
  className="ais-Panel"
>
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "panelFooter": "FOOTER",
          },
        }
      }
    />
  </div>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Footer",
        "onClick": null,
      }
    }
    templateKey="panelFooter"
    templates={
      Object {
        "panelFooter": "FOOTER",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter should add a header if such a template is passed 1`] = `
<div
  className="ais-Panel"
>
  <Unknown
    data={undefined}
    rootProps={
      Object {
        "className": "ais-Panel-Header",
        "onClick": null,
      }
    }
    templateKey="panelHeader"
    templates={
      Object {
        "panelHeader": "HEADER",
      }
    }
    transformData={null}
  />
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "panelHeader": "HEADER",
          },
        }
      }
    />
  </div>
</div>
`;

exports[`headerFooter should render the component in a root and body 1`] = `
<div
  className="ais-Panel"
>
  <div
    className="ais-Panel-body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={Object {}}
    />
  </div>
</div>
`;
