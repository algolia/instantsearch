// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GeoSearchControls Clear button expect to not render the button when the options is disabled 1`] = `<div />`;

exports[`GeoSearchControls Clear button expect to not render the button when the refinement is not coming from the map 1`] = `<div />`;

exports[`GeoSearchControls Clear button expect to render the button when the refinement come from the map 1`] = `
<div>
  <GeoSearchButton
    className="reset"
    disabled={false}
    onClick={[Function]}
  >
    <Template
      data={Object {}}
      rootTagName="span"
      templateKey="reset"
      templates={Object {}}
      templatesConfig={Object {}}
      useCustomCompileOptions={Object {}}
    />
  </GeoSearchButton>
</div>
`;

exports[`GeoSearchControls Control disabled expect to render nothing when refine on map move is enabled 1`] = `<div />`;

exports[`GeoSearchControls Control disabled expect to render the button disabled when refine on map move is disabled and the map has not moved 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchButton
      className="redo redo-disabled"
      disabled={true}
      onClick={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="redo"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchButton>
  </div>
</div>
`;

exports[`GeoSearchControls Control disabled expect to render the button enabled when refine on map move is disabled and the map as moved 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchButton
      className="redo"
      disabled={false}
      onClick={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="redo"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchButton>
  </div>
</div>
`;

exports[`GeoSearchControls Control enabled expect to render the button when refine on map move is disabled and the map has moved 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchButton
      className="redo"
      disabled={false}
      onClick={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="redo"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchButton>
  </div>
</div>
`;

exports[`GeoSearchControls Control enabled expect to render the toggle checked when refine on map move is enabled 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchToggle
      checked={true}
      classNameInput="input"
      classNameLabel="label label-selected"
      onToggle={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="toggle"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchToggle>
  </div>
</div>
`;

exports[`GeoSearchControls Control enabled expect to render the toggle checked when refine on map move is enabled even when the map has moved 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchToggle
      checked={true}
      classNameInput="input"
      classNameLabel="label label-selected"
      onToggle={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="toggle"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchToggle>
  </div>
</div>
`;

exports[`GeoSearchControls Control enabled expect to render the toggle unchecked when refine on map move is disabled and the map has not moved 1`] = `
<div>
  <div
    className="control"
  >
    <GeoSearchToggle
      checked={false}
      classNameInput="input"
      classNameLabel="label"
      onToggle={[Function]}
    >
      <Template
        data={Object {}}
        rootTagName="span"
        templateKey="toggle"
        templates={Object {}}
        templatesConfig={Object {}}
        useCustomCompileOptions={Object {}}
      />
    </GeoSearchToggle>
  </div>
</div>
`;
