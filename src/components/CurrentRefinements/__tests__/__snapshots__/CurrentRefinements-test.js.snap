// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CurrentRefinements options.refinements can be used with a disjunctive facet 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="customDisjunctiveFacet-0"
    >
      <span
        className="label"
      >
        CustomDisjunctiveFacet
        :
      </span>
      <span
        className="category"
        key="customDisjunctiveFacet:val1:disjunctive:none"
      >
        <span
          className="categoryLabel"
        >
          val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements options.refinements can be used with a facet 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="customFacet-0"
    >
      <span
        className="label"
      >
        CustomFacet
        :
      </span>
      <span
        className="category"
        key="customFacet:val1:facet:none"
      >
        <span
          className="categoryLabel"
        >
          val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements options.refinements can be used with a hierarchical facet 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="customHierarchicalFacet-0"
    >
      <span
        className="label"
      >
        CustomHierarchicalFacet
        :
      </span>
      <span
        className="category"
        key="customHierarchicalFacet:val1:hierarchical:none"
      >
        <span
          className="categoryLabel"
        >
          val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements options.refinements can be used with a tag 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="_tags-0"
    >
      <span
        className="label"
      >
        _tags
        :
      </span>
      <span
        className="category"
        key="_tags:tag1:tag:none"
      >
        <span
          className="categoryLabel"
        >
          tag1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements options.refinements can be used with an exclude 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="customExcludeFacet-0"
    >
      <span
        className="label"
      >
        CustomExcludeFacet
        :
      </span>
      <span
        className="category"
        key="customExcludeFacet:val1:exclude:none"
      >
        <span
          className="categoryLabel"
        >
          val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements options.refinements can be used with numeric filters 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="customNumericFilter-0"
    >
      <span
        className="label"
      >
        CustomNumericFilter
        :
      </span>
      <span
        className="category"
        key="customNumericFilter:val1:numeric:="
      >
        <span
          className="categoryLabel"
        >
          val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="customNumericFilter-1"
    >
      <span
        className="label"
      >
        CustomNumericFilter
        :
      </span>
      <span
        className="category"
        key="customNumericFilter:val2:numeric:<="
      >
        <span
          className="categoryLabel"
        >
          val2
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="customNumericFilter-2"
    >
      <span
        className="label"
      >
        CustomNumericFilter
        :
      </span>
      <span
        className="category"
        key="customNumericFilter:val3:numeric:>="
      >
        <span
          className="categoryLabel"
        >
          val3
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;

exports[`CurrentRefinements renders 1`] = `
<div
  className="root"
>
  <ul
    className="list"
  >
    <li
      className="item"
      key="facet-0"
    >
      <span
        className="label"
      >
        Facet
        :
      </span>
      <span
        className="category"
        key="facet:facet-val1:facet:none"
      >
        <span
          className="categoryLabel"
        >
          facet-val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
      <span
        className="category"
        key="facet:facet-val2:facet:none"
      >
        <span
          className="categoryLabel"
        >
          facet-val2
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="facet-1"
    >
      <span
        className="label"
      >
        Facet
        :
      </span>
      <span
        className="category"
        key="facetExclude:disjunctiveFacet-val1:exclude:none"
      >
        <span
          className="categoryLabel"
        >
          disjunctiveFacet-val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="disjunctive-2"
    >
      <span
        className="label"
      >
        Disjunctive
        :
      </span>
      <span
        className="category"
        key="disjunctiveFacet:disjunctiveFacet-val1:disjunctive:none"
      >
        <span
          className="categoryLabel"
        >
          disjunctiveFacet-val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="hierarchical-3"
    >
      <span
        className="label"
      >
        Hierarchical
        :
      </span>
      <span
        className="category"
        key="hierarchicalFacet:hierarchicalFacet-val1:hierarchical:none"
      >
        <span
          className="categoryLabel"
        >
          hierarchicalFacet-val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="numeric-4"
    >
      <span
        className="label"
      >
        Numeric
        :
      </span>
      <span
        className="category"
        key="numericFacet:numericFacet-val1:numeric:>="
      >
        <span
          className="categoryLabel"
        >
          numericFacet-val1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
    <li
      className="item"
      key="tag-5"
    >
      <span
        className="label"
      >
        Tag
        :
      </span>
      <span
        className="category"
        key="_tags:tag1:tag:none"
      >
        <span
          className="categoryLabel"
        >
          tag1
        </span>
        <button
          className="delete"
          onClick={[Function]}
        >
          ✕
        </button>
      </span>
    </li>
  </ul>
</div>
`;
