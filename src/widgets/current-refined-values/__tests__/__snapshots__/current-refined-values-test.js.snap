// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`currentRefinedValues() render() options.container should render with a HTMLElement container 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.container should render with a string container 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.cssClasses should be passed in the cssClasses 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements custom-root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.cssClasses should work with an array 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements custom-root custom-root-2",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.includedAttributes should default to false 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "label": "Facet exclude",
        "name": "facetExclude",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.templates should pass it in templateProps 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "MY CUSTOM TEMPLATE",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() options.transformItems should transform passed items 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "transformed": true,
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "transformed": true,
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "transformed": true,
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "transformed": true,
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "transformed": true,
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "transformed": true,
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "transformed": true,
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "transformed": true,
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "transformed": true,
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "transformed": true,
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "transformed": true,
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "transformed": true,
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "transformed": true,
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() should render twice <CurrentRefinedValues ... /> 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() should render twice <CurrentRefinedValues ... /> 2`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "_tags": Object {
        "name": "_tags",
      },
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facet": Object {
        "name": "facet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
      "hierarchicalFacet": Object {
        "name": "hierarchicalFacet",
      },
      "numericDisjunctiveFacet": Object {
        "name": "numericDisjunctiveFacet",
      },
      "numericFacet": Object {
        "name": "numericFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val1",
        "count": 1,
        "exhaustive": true,
        "name": "facet-val1",
        "type": "facet",
      },
      Object {
        "attributeName": "facet",
        "computedLabel": "facet-val2",
        "count": 2,
        "exhaustive": true,
        "name": "facet-val2",
        "type": "facet",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "hierarchicalFacet",
        "computedLabel": "hierarchicalFacet-val2",
        "count": 6,
        "exhaustive": true,
        "name": "hierarchicalFacet-val2",
        "type": "hierarchical",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≥ 1",
        "name": "1",
        "numericValue": 1,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericFacet",
        "computedLabel": "≤ 2",
        "name": "2",
        "numericValue": 2,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≥ 3",
        "name": "3",
        "numericValue": 3,
        "operator": ">=",
        "type": "numeric",
      },
      Object {
        "attributeName": "numericDisjunctiveFacet",
        "computedLabel": "≤ 4",
        "name": "4",
        "numericValue": 4,
        "operator": "<=",
        "type": "numeric",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag1",
        "name": "tag1",
        "type": "tag",
      },
      Object {
        "attributeName": "_tags",
        "computedLabel": "tag2",
        "name": "tag2",
        "type": "tag",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() with excludedAttributes should ignore excluded attributes 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;

exports[`currentRefinedValues() render() with included attributes should sort the refinements according to their order 1`] = `
<CurrentRefinedValues
  attributes={
    Object {
      "disjunctiveFacet": Object {
        "name": "disjunctiveFacet",
      },
      "facetExclude": Object {
        "name": "facetExclude",
      },
    }
  }
  clearRefinementClicks={
    Array [
      [Function],
      [Function],
      [Function],
      [Function],
    ]
  }
  clearRefinementURLs={
    Array [
      "#cleared",
      "#cleared",
      "#cleared",
      "#cleared",
    ]
  }
  cssClasses={
    Object {
      "category": "ais-CurrentRefinements-category category",
      "categoryLabel": "ais-CurrentRefinements-categoryLabel categoryLabel",
      "delete": "ais-CurrentRefinements-delete delete",
      "item": "ais-CurrentRefinements-item item",
      "label": "ais-CurrentRefinements-label label",
      "list": "ais-CurrentRefinements-list list",
      "reset": "ais-CurrentRefinements-reset reset",
      "root": "ais-CurrentRefinements root",
    }
  }
  refinements={
    Array [
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val1",
        "count": 3,
        "exhaustive": true,
        "name": "disjunctiveFacet-val1",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "disjunctiveFacet",
        "computedLabel": "disjunctiveFacet-val2",
        "count": 4,
        "exhaustive": true,
        "name": "disjunctiveFacet-val2",
        "type": "disjunctive",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val1",
        "exclude": true,
        "name": "facetExclude-val1",
        "type": "exclude",
      },
      Object {
        "attributeName": "facetExclude",
        "computedLabel": "facetExclude-val2",
        "exclude": true,
        "name": "facetExclude-val2",
        "type": "exclude",
      },
    ]
  }
  templateProps={
    Object {
      "templates": Object {
        "item": "ITEM",
      },
      "templatesConfig": Object {
        "randomAttributeNeverUsed": "value",
      },
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": true,
      },
    }
  }
/>
`;
