// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`refinementList() instantiated with wrong parameters throws an exception when showMoreLimit is lower than limit 1`] = `
"[InstantSearch.js] \`showMoreLimit\` should be a number greater or equal than \`limit\`.

Usage:
refinementList({
  container,
  attribute,
  operator?: string = 'or',
  sortBy?: string[]|function = ['isRefined', 'count:desc', 'name:asc'] ],
  limit?: number = 10,
  showMore?: boolean = false,
  showMoreLimit?: number = 10,
  cssClasses?: { root, noRefinementRoot, searchBox, list, item, selectedItem, label, checkbox, labelText, count, noResults, showMore, disabledShowMore },
  templates?: { item, searchableNoResults, showMoreActive, showMoreInactive },
  searchable?: boolean = false,
  searchablePlaceholder?: string = 'Search...',
  searchableIsAlwaysActive?: boolean = true,
  searchableEscapeFacetValues?: boolean = true,
  transformItems?: function,
})"
`;

exports[`refinementList() instantiated with wrong parameters throws an exception when showMoreLimit without showMore option 1`] = `
"[InstantSearch.js] \`showMoreLimit\` must be used with \`showMore\` set to \`true\`.

Usage:
refinementList({
  container,
  attribute,
  operator?: string = 'or',
  sortBy?: string[]|function = ['isRefined', 'count:desc', 'name:asc'] ],
  limit?: number = 10,
  showMore?: boolean = false,
  showMoreLimit?: number = 10,
  cssClasses?: { root, noRefinementRoot, searchBox, list, item, selectedItem, label, checkbox, labelText, count, noResults, showMore, disabledShowMore },
  templates?: { item, searchableNoResults, showMoreActive, showMoreInactive },
  searchable?: boolean = false,
  searchablePlaceholder?: string = 'Search...',
  searchableIsAlwaysActive?: boolean = true,
  searchableEscapeFacetValues?: boolean = true,
  transformItems?: function,
})"
`;

exports[`refinementList() render renders transformed items correctly 1`] = `
<RefinementList
  canToggleShowMore={false}
  createURL={[Function]}
  cssClasses={
    Object {
      "checkbox": "ais-RefinementList-checkbox",
      "count": "ais-RefinementList-count",
      "disabledShowMore": "ais-RefinementList-showMore--disabled",
      "item": "ais-RefinementList-item",
      "label": "ais-RefinementList-label",
      "labelText": "ais-RefinementList-labelText",
      "list": "ais-RefinementList-list",
      "noRefinementRoot": "ais-RefinementList--noRefinement",
      "noResults": "ais-RefinementList-noResults",
      "root": "ais-RefinementList",
      "searchBox": "ais-RefinementList-searchBox",
      "selectedItem": "ais-RefinementList-item--selected",
      "showMore": "ais-RefinementList-showMore",
    }
  }
  depth={0}
  facetValues={
    Array [
      Object {
        "highlighted": "foo",
        "label": "foo",
        "transformed": true,
        "value": "foo",
      },
      Object {
        "highlighted": "bar",
        "label": "bar",
        "transformed": true,
        "value": "bar",
      },
    ]
  }
  hasExhaustiveItems={true}
  isFromSearch={false}
  isShowingMore={false}
  searchIsAlwaysActive={true}
  searchPlaceholder="Search..."
  showMore={false}
  templateProps={
    Object {
      "templates": Object {
        "item": "<label class=\\"{{cssClasses.label}}\\">
  <input type=\\"checkbox\\"
         class=\\"{{cssClasses.checkbox}}\\"
         value=\\"{{value}}\\"
         {{#isRefined}}checked{{/isRefined}} />
  <span class=\\"{{cssClasses.labelText}}\\">{{{highlighted}}}</span>
  <span class=\\"{{cssClasses.count}}\\">{{#helpers.formatNumber}}{{count}}{{/helpers.formatNumber}}</span>
</label>",
        "searchableNoResults": "No results",
      },
      "templatesConfig": Object {},
      "transformData": undefined,
      "useCustomCompileOptions": Object {
        "item": false,
        "searchableNoResults": false,
      },
    }
  }
  toggleRefinement={[Function]}
  toggleShowMore={[Function]}
/>
`;
