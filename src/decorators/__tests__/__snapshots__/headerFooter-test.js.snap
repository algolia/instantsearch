// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`headerFooter collapsible when collapsed 1`] = `
<div
  className="ais-root root ais-root__collapsible ais-root__collapsed"
>
  <Unknown
    rootProps={
      Object {
        "className": "ais-header",
        "onClick": [Function],
      }
    }
    templateKey="header"
    templates={
      Object {
        "footer": "yo footer",
        "header": "yo header",
      }
    }
    transformData={null}
  />
  <div
    className="ais-body body"
  >
    <TestComponent
      collapsible={
        Object {
          "collapsed": true,
        }
      }
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "footer": "yo footer",
            "header": "yo header",
          },
        }
      }
    />
  </div>
  <Unknown
    rootProps={
      Object {
        "className": "ais-footer",
        "onClick": null,
      }
    }
    templateKey="footer"
    templates={
      Object {
        "footer": "yo footer",
        "header": "yo header",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter collapsible when true 1`] = `
<div
  className="ais-root root ais-root__collapsible"
>
  <Unknown
    rootProps={
      Object {
        "className": "ais-header",
        "onClick": [Function],
      }
    }
    templateKey="header"
    templates={
      Object {
        "footer": "yo footer",
        "header": "yo header",
      }
    }
    transformData={null}
  />
  <div
    className="ais-body body"
  >
    <TestComponent
      collapsible={true}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "footer": "yo footer",
            "header": "yo header",
          },
        }
      }
    />
  </div>
  <Unknown
    rootProps={
      Object {
        "className": "ais-footer",
        "onClick": null,
      }
    }
    templateKey="footer"
    templates={
      Object {
        "footer": "yo footer",
        "header": "yo header",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter should add a footer if such a template is passed 1`] = `
<div
  className="ais-root root"
>
  <div
    className="ais-body body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "footer": "FOOTER",
          },
        }
      }
    />
  </div>
  <Unknown
    rootProps={
      Object {
        "className": "ais-footer",
        "onClick": null,
      }
    }
    templateKey="footer"
    templates={
      Object {
        "footer": "FOOTER",
      }
    }
    transformData={null}
  />
</div>
`;

exports[`headerFooter should add a header if such a template is passed 1`] = `
<div
  className="ais-root root"
>
  <Unknown
    rootProps={
      Object {
        "className": "ais-header",
        "onClick": null,
      }
    }
    templateKey="header"
    templates={
      Object {
        "header": "HEADER",
      }
    }
    transformData={null}
  />
  <div
    className="ais-body body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={
        Object {
          "templates": Object {
            "header": "HEADER",
          },
        }
      }
    />
  </div>
</div>
`;

exports[`headerFooter should render the component in a root and body 1`] = `
<div
  className="ais-root root"
>
  <div
    className="ais-body body"
  >
    <TestComponent
      collapsible={false}
      cssClasses={
        Object {
          "body": "body",
          "root": "root",
        }
      }
      templateProps={Object {}}
    />
  </div>
</div>
`;
